/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AnalystRole;

import Business.Enterprise.Enterprise;
import Business.Organization.AnalystOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DispatchArrivalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AkilP
 */
public class ManageDispatchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageDispatchJPanel
     */
       private JPanel userProcessContainer;
    private UserAccount account;
    private AnalystOrganization analystOrganization;
    private Enterprise enterprise;
   public ManageDispatchJPanel(JPanel userProcessContainer, Enterprise enterprise, AnalystOrganization analystOrganization, UserAccount account) {
       // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
       initComponents(); 
       this.enterprise = enterprise;
        this.account = account;
        this.analystOrganization = analystOrganization;
        this.userProcessContainer = userProcessContainer;
        populateDispatch();
    }

   public void populateDispatch(){
       DefaultTableModel model = (DefaultTableModel) dispatchTable.getModel();
        model.setRowCount(0);
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization.getName().equalsIgnoreCase(Organization.Type.Analyst.getValue())) {
                for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {
                    if ((request.getName()).equals(WorkRequest.Type.Dispatch.getValue())) {
                        DispatchArrivalWorkRequest dispatch = (DispatchArrivalWorkRequest) request;
                        Object[] row = new Object[6];
                       row[0] = dispatch;
                        
                        row[1] = dispatch.getSender();
                        row[2] = dispatch.getReceiver();
                        row[3] = dispatch.getStatus();
                        row[4] = dispatch.getStreetline1() + "," + dispatch.getCity() + "," + dispatch.getZipCode() + "," + dispatch.getZipCode();
                         
                        model.addRow(row);
                    }
                }
            }
        }
   }
   
   
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        assignToMebutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dispatchTable = new javax.swing.JTable();

        assignToMebutton.setText("Assign to me");
        assignToMebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignToMebuttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Manage Dispatch Request");

        backButton.setText("<<Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        dispatchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Sender", "Receiver", "Status", "Location"
            }
        ));
        dispatchTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(dispatchTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addComponent(backButton)
                        .addGap(225, 225, 225)
                        .addComponent(assignToMebutton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(343, 343, 343)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(187, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backButton)
                    .addComponent(assignToMebutton))
                .addContainerGap(250, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

    private void assignToMebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignToMebuttonActionPerformed
        // TODO add your handling code here:
        int selectedRow = dispatchTable.getSelectedRow();

        if (selectedRow >= 0) {
            DispatchArrivalWorkRequest request =  (DispatchArrivalWorkRequest) dispatchTable.getValueAt(selectedRow, 0);

            request.setStatus("Received");
            request.setReceiver(account);
            populateDispatch();
            /*ProcessWorkRequestJPanel processWorkRequestJPanel = new ProcessWorkRequestJPanel(userProcessContainer, request);
            userProcessContainer.add("processWorkRequestJPanel", processWorkRequestJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);*/
            JOptionPane.showMessageDialog(null, "Request assgined to you Sucessfully");

        } else {
            JOptionPane.showMessageDialog(null, "Please select a request message to process.");
            return;
        
        }
    }//GEN-LAST:event_assignToMebuttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assignToMebutton;
    private javax.swing.JButton backButton;
    private javax.swing.JTable dispatchTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
